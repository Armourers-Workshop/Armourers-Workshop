plugins {
    id "java"
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.16.5+build.10:v2"
    }

    task signJar {
        onlyIf { System.getenv("AW_SIGN_STORE") != null }
        doLast {
            ant.signjar(
                    destDir: "${remapJar.destinationDir}",
                    jar: "${remapJar.archivePath}",
                    alias: System.getenv("AW_SIGN_ALIAS"),
                    keypass: System.getenv("AW_SIGN_KEY_PASS"),
                    storepass: System.getenv("AW_SIGN_STORE_PASS"),
                    keystore: System.getenv("AW_SIGN_STORE"),
                    storetype: "jks"
            )
        }
    }

    remapJar.finalizedBy(signJar)
}

allprojects {
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    if (version == "unspecified") {
        version = "homebaked"
    }

	def uname = rootProject.archives_base_name.replaceAll("-","")
    archivesBaseName = "${uname.toLowerCase()}-${project.name}-${rootProject.minecraft_version}"
    version = "${rootProject.mod_version}-${version}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }
}
