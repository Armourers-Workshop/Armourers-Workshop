package moe.plushie.armourers_workshop.compatibility.core;

import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.api.common.IEntityDataBuilder;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.world.damagesource.DamageSource;
import net.minecraft.world.entity.EntityDimensions;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.Pose;
import net.minecraft.world.entity.decoration.ArmorStand;
import net.minecraft.world.level.Level;

@Available("[1.18, 1.21)")
public class AbstractLivingEntityImpl {

    public static abstract class CustomLivingEntity extends LivingEntity {

        public CustomLivingEntity(EntityType<? extends LivingEntity> entityType, Level level) {
            super(entityType, level);
        }
    }

    public static abstract class CustomArmorStand extends ArmorStand {

        public CustomArmorStand(EntityType<? extends CustomArmorStand> entityType, Level level) {
            super(entityType, level);
        }

        public void brokenByPlayer(ServerLevel serverLevel, DamageSource damageSource) {
            super.brokenByPlayer(damageSource);
        }

        public void brokenByAnything(ServerLevel serverLevel, DamageSource damageSource) {
            super.brokenByAnything(damageSource);
        }

        @Override
        public final void brokenByPlayer(DamageSource damageSource) {
            if (getLevel() instanceof ServerLevel serverLevel) {
                brokenByPlayer(serverLevel, damageSource);
            }
        }

        @Override
        public final void brokenByAnything(DamageSource damageSource) {
            if (getLevel() instanceof ServerLevel serverLevel) {
                brokenByAnything(serverLevel, damageSource);
            }
        }

        protected void defineSynchedData(IEntityDataBuilder builder) {
        }

        protected EntityDimensions getDefaultDimensions(Pose pose) {
            return super.getDimensions(pose);
        }

        @Override
        protected final void defineSynchedData() {
            super.defineSynchedData();
            this.defineSynchedData(entityData::define);
        }

        @Override
        public final EntityDimensions getDimensions(Pose pose) {
            return this.getDefaultDimensions(pose).scale(getScale());
        }

        @Override
        protected float getStandingEyeHeight(Pose pose, EntityDimensions entityDimensions) {
            EntityDimensions dimensions = getDefaultDimensions(pose);
            return dimensions.getEyeHeight() * getScale();
        }
    }
}
