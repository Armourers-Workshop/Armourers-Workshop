package moe.plushie.armourers_workshop.compatibility.forge;

import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.api.common.IItemTag;
import moe.plushie.armourers_workshop.api.registry.IRegistry;
import moe.plushie.armourers_workshop.utils.TypedRegistry;
import net.minecraft.core.Registry;
import net.minecraft.network.syncher.EntityDataSerializer;
import net.minecraft.sounds.SoundEvent;
import net.minecraft.tags.TagKey;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.inventory.MenuType;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.entity.BlockEntityType;
import net.minecraft.world.level.storage.loot.functions.LootItemFunctionType;
import net.minecraftforge.event.AddReloadListenerEvent;
import net.minecraftforge.event.RegisterCommandsEvent;
import net.minecraftforge.event.TickEvent;
import net.minecraftforge.event.entity.EntityAttributeCreationEvent;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;
import net.minecraftforge.event.entity.living.LivingDropsEvent;
import net.minecraftforge.event.entity.player.AttackEntityEvent;
import net.minecraftforge.event.entity.player.PlayerEvent;
import net.minecraftforge.event.server.ServerAboutToStartEvent;
import net.minecraftforge.event.server.ServerStartedEvent;
import net.minecraftforge.event.server.ServerStoppedEvent;
import net.minecraftforge.event.server.ServerStoppingEvent;
import net.minecraftforge.event.world.BlockEvent;
import net.minecraftforge.fml.event.config.ModConfigEvent;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLLoadCompleteEvent;
import net.minecraftforge.registries.DataSerializerEntry;
import net.minecraftforge.registries.ForgeRegistries;

import manifold.ext.rt.api.auto;

@Available("[1.18, 1.19)")
public class AbstractForgeRegistries {

    public static final IRegistry<Block> BLOCKS = AbstractForgeRegistry.create(Block.class, ForgeRegistries.BLOCKS);
    public static final IRegistry<Item> ITEMS = AbstractForgeRegistry.create(Item.class, ForgeRegistries.ITEMS);
    public static final IRegistry<MenuType<?>> MENU_TYPES = AbstractForgeRegistry.create(MenuType.class, ForgeRegistries.CONTAINERS);
    public static final IRegistry<EntityType<?>> ENTITY_TYPES = AbstractForgeRegistry.create(EntityType.class, ForgeRegistries.ENTITIES);
    public static final IRegistry<EntityDataSerializer<?>> ENTITY_DATA_SERIALIZER = AbstractForgeRegistry.createAndCast(EntityDataSerializer.class, ForgeRegistries.Keys.DATA_SERIALIZERS, DataSerializerEntry::getSerializer, DataSerializerEntry::new);
    public static final IRegistry<BlockEntityType<?>> BLOCK_ENTITY_TYPES = AbstractForgeRegistry.create(BlockEntityType.class, ForgeRegistries.BLOCK_ENTITIES);
    public static final IRegistry<SoundEvent> SOUND_EVENTS = AbstractForgeRegistry.create(SoundEvent.class, ForgeRegistries.SOUND_EVENTS);

    public static final IRegistry<LootItemFunctionType> ITEM_LOOT_FUNCTIONS = AbstractForgeRegistry.create(LootItemFunctionType.class, Registry.LOOT_FUNCTION_REGISTRY);
    public static final IRegistry<CreativeModeTab> ITEM_GROUPS = TypedRegistry.passthrough(CreativeModeTab.class);
    public static final IRegistry<IItemTag> ITEM_TAGS = TypedRegistry.factory(TagKey.class, registryName -> {
        TagKey<Item> tag = TagKey.create(ForgeRegistries.Keys.ITEMS, registryName);
        return itemStack -> itemStack.is(tag);
    });
}
