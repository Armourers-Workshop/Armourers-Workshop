package moe.plushie.armourers_workshop.compatibility.forge.event.client;

import com.apple.library.coregraphics.CGGraphicsContext;
import com.apple.library.coregraphics.CGRect;
import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.api.common.ITooltipContext;
import moe.plushie.armourers_workshop.api.registry.IEventHandler;
import moe.plushie.armourers_workshop.compatibility.client.gui.AbstractGraphicsRenderer;
import moe.plushie.armourers_workshop.compatibility.core.data.AbstractTooltipContext;
import moe.plushie.armourers_workshop.compatibility.forge.AbstractForgeClientEventsImpl;
import moe.plushie.armourers_workshop.init.platform.event.client.ItemTooltipEvent;
import net.minecraft.network.chat.Component;
import net.minecraft.world.item.ItemStack;

import java.util.List;

@Available("[1.16, 1.18)")
public class AbstractForgeItemTooltipEvent {

    private static CGRect screenLayout = CGRect.ZERO;

    public static IEventHandler<ItemTooltipEvent.Gather> gatherFactory() {
        return AbstractForgeClientEventsImpl.ITEM_TOOLTIP_GATHER.map(event -> new ItemTooltipEvent.Gather() {
            @Override
            public ItemStack getItemStack() {
                return event.getItemStack();
            }

            @Override
            public List<Component> getTooltips() {
                return event.getToolTip();
            }

            @Override
            public ITooltipContext getContext() {
                return new AbstractTooltipContext<>(null, event.getFlags());
            }
        });
    }

    public static IEventHandler<ItemTooltipEvent.Render> renderFactory() {
        // we need to collect position information before rendering.
        AbstractForgeClientEventsImpl.ITEM_TOOLTIP_RENDER_PRE.listen(event -> {
            screenLayout = new CGRect(event.getX(), event.getY(), event.getScreenWidth(), event.getScreenHeight());
        });
        //
        return AbstractForgeClientEventsImpl.ITEM_TOOLTIP_RENDER_POST.map(event -> new ItemTooltipEvent.Render() {

            @Override
            public ItemStack getItemStack() {
                return event.getStack();
            }

            @Override
            public CGRect getFrame() {
                return new CGRect(event.getX(), event.getY(), event.getWidth(), event.getHeight());
            }

            @Override
            public float getScreenWidth() {
                return screenLayout.getWidth();
            }

            @Override
            public float getScreenHeight() {
                return screenLayout.getHeight();
            }

            @Override
            public CGGraphicsContext getContext() {
                float mouseX = screenLayout.getX();
                float mouseY = screenLayout.getY();
                return AbstractGraphicsRenderer.of(null, event.getMatrixStack(), mouseX, mouseY, 0);
            }
        });
    }
}
