package moe.plushie.armourers_workshop.compatibility.fabric.ext;

import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.compatibility.client.AbstractBlockEntityRendererProvider;
import moe.plushie.armourers_workshop.compatibility.client.AbstractEntityRendererProvider;
import moe.plushie.armourers_workshop.api.common.IRegistryKey;
import moe.plushie.armourers_workshop.compatibility.fabric.AbstractFabricClientNativeProvider;
import moe.plushie.armourers_workshop.init.platform.RendererManager;
import net.fabricmc.fabric.api.client.rendereregistry.v1.BlockEntityRendererRegistry;
import net.fabricmc.fabric.api.client.rendereregistry.v1.EntityRendererRegistry;
import net.minecraft.client.renderer.entity.EntityRenderDispatcher;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.entity.BlockEntityType;

import java.util.function.Consumer;

@Available("[1.16, 1.18)")
public interface AbstractClientFabricExt_V16 extends AbstractFabricClientNativeProvider {

    @Override
    default void entityRendererRegistry(Consumer<MyEntityRendererRegistry> consumer) {
        consumer.accept(new MyEntityRendererRegistry() {
            @Override
            public <T extends Entity> void registerEntity(IRegistryKey<EntityType<T>> entityType, AbstractEntityRendererProvider<T> provider) {
                EntityRendererRegistry.INSTANCE.register(entityType.get(), (a, b) -> provider.create(a));
            }

            @Override
            public <T extends BlockEntity> void registerBlockEntity(IRegistryKey<BlockEntityType<T>> entityType, AbstractBlockEntityRendererProvider<T> provider) {
                BlockEntityRendererRegistry.INSTANCE.register(entityType.get(), provider::create);
            }
        });
    }
}
