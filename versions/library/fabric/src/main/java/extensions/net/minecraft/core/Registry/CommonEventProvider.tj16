package extensions.net.minecraft.core.Registry;

import com.mojang.brigadier.CommandDispatcher;
import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.compatibility.AbstractArgumentTypeInfo;
import moe.plushie.armourers_workshop.init.provider.CommonNativeProvider;
import net.fabricmc.fabric.api.command.v1.CommandRegistrationCallback;
import net.fabricmc.fabric.api.entity.event.v1.ServerPlayerEvents;
import net.minecraft.commands.CommandSourceStack;
import net.minecraft.world.entity.Entity;

import java.util.function.Consumer;

import manifold.ext.rt.api.Extension;
import manifold.ext.rt.api.ThisClass;

@Available("[1.16, 1.19)")
@Extension
public class CommonEventProvider {

    public static void willDropEntityFA(@ThisClass Class<?> clazz, Consumer<Entity> consumer) {
        ServerPlayerEvents.ALLOW_DEATH.register((player, source, damageAmount) -> {
            consumer.accept(player);
            return true;
        });
    }

    public static void willRegisterCommandFA(@ThisClass Class<?> clazz, Consumer<CommandDispatcher<CommandSourceStack>> consumer) {
        CommandRegistrationCallback.EVENT.register((dispatcher, dedicated) -> consumer.accept(dispatcher));
    }

    public static void willRegisterArgumentFA(@ThisClass Class<?> clazz, Consumer<CommonNativeProvider.ArgumentRegistry> consumer) {
        consumer.accept(AbstractArgumentTypeInfo::register);
    }
}

