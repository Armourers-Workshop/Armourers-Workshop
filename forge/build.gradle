plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        // when we switch the minecraft, the mixin will changes,
        // so we need find all active mixins in the project,
        // and then add all mixins name to manifest.
        getRootProject().mixinConfigs.resolve(name).sort().forEach {
            mixinConfig it.name
        }
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    maven { url = "https://modmaven.dev/" }
    flatDir {
        dir 'run/mods-dev'
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    modApi("mezz.jei:jei-${project.jei_api_version}")
    //modApi("com.sk89q.worldedit:worldedit-core:7.2.5-SNAPSHOT")

    //modLocalRuntime("mezz.jei:jei-${rootProject.minecraft_version}-forge:${project.jei_version}")
    //modLocalRuntime("mezz.jei:jei-${rootProject.minecraft_version}:${project.jei_version}")
    //modLocalRuntime("com.sk89q.worldedit:worldedit-mod:7.2.5-dist")
    //modLocalRuntime("noppes.npcs:CustomNPCs:1.16.5.20220622snapshot")
    //modLocalRuntime("org.samo_lego:taterzens:1.9.6-forge")
    //modLocalRuntime("net.optifine:OptiFine:1.18.2_HD_U_H9_pre1")

//    modApi("yesman.epicfight:EpicFight:18.3.7")
//    modLocalRuntime("yesman.epicfight:EpicFight:18.3.7")

    modApi("yesman.epicfight:EpicFight:16.6.4")
    modLocalRuntime("yesman.epicfight:EpicFight:16.6.4")
}

processResources {
    inputs.property "version", project.version
    inputs.property "forge_version", project.forge_version
    inputs.property "minecraft_version", project.minecraft_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version,
                "forge_version": rootProject.forge_version,
                "minecraft_version": rootProject.minecraft_version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
